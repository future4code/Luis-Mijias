{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["url","headers","Authorization","App","state","name","email","inputNome","inputEmail","mudaInputNome","e","setState","target","value","mudaInputEmail","pegarNome","axios","get","then","res","console","log","data","catch","err","alert","pegarEmail","criarUsuario","body","post","response","message","this","componentesNome","map","play","id","placeholder","onChange","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAGMA,EAAO,uEAIPC,EAAU,CAAGA,QAAS,CAAKC,cAAe,yBAE3BC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,MAAM,GACNC,UAAW,GACXC,WAAW,I,EAQbC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEJ,UAAWG,EAAEE,OAAOC,S,EAGtCC,eAAiB,SAACJ,GAChB,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAAOC,S,EAIvCE,UAAY,WACVC,IACGC,IAAIjB,EAAKC,GACTiB,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKR,SAAS,CAAEN,KAAMc,EAAIG,UAE3BC,OAAM,SAACC,GACNC,MAAMD,O,EAGZE,WAAa,WACXV,IACGC,IAAIjB,EAAKC,GACTiB,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKR,SAAS,CAAEL,MAAOa,EAAIG,UAE5BC,OAAM,SAACC,GACNC,MAAMD,O,EAIbG,aAAe,WACZ,IAAMC,EAAO,CACXvB,KAAM,EAAKD,MAAMG,UACjBD,MAAO,EAAKF,MAAMI,YAGpBQ,IACGa,KAAK7B,EAAK4B,EAAM3B,GAChBiB,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZM,MAAM,qCACN,EAAKd,SAAS,CAAEJ,UAAW,GAAGC,WAAW,KACzC,EAAKO,YACL,EAAKW,gBAENH,OAAM,SAACC,GACNC,MAAMD,EAAIM,SAASR,KAAKS,a,uDArD9B,WACEC,KAAKL,eACLK,KAAKjB,c,oBAwDP,WACE,IAAMkB,EAAkBD,KAAK5B,MAAMC,KAAK6B,KAAI,SAACC,GAC3C,OAAO,6BAAmBA,EAAK9B,MAAf8B,EAAKC,OAGvB,OACE,gCACE,4CACA,uBACEC,YAAa,kBACbxB,MAAOmB,KAAK5B,MAAMG,UAClB+B,SAAUN,KAAKvB,gBAEjB,uBACA,uBACE4B,YAAa,oBACbxB,MAAOmB,KAAK5B,MAAMI,WAClB8B,SAAUN,KAAKlB,iBAEjB,wBAAQyB,QAASP,KAAKL,aAAtB,oBACCM,S,GAtFwBO,IAAMC,WCGxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2cf1142c.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst url =  \" https://us-central1-labenu-apis.cloudfunctions.net/labenusers/users\" ;\n\n\n\nconst headers = {  headers: {    Authorization: \"luis-mijias-lovelace\"  }};\n\nexport default class App extends React.Component {\n  state = {\n    name: [],\n    email:[],\n    inputNome: \"\",\n    inputEmail:\"\"\n  };\n\n  componentDidMount() {\n    this.criarUsuario(); \n    this.pegarNome();      \n  }\n\n  mudaInputNome = (e) => {\n    this.setState({ inputNome: e.target.value });\n  };\n  \n  mudaInputEmail = (e) => {\n    this.setState({ inputEmail: e.target.value });\n  };\n\n\n  pegarNome = () => {\n    axios\n      .get(url, headers)\n      .then((res) => {\n        console.log(res)\n        this.setState({ name: res.data });\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n  pegarEmail = () => {\n    axios\n      .get(url, headers)\n      .then((res) => {\n        console.log(res)\n        this.setState({ email: res.data });\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n criarUsuario = () => {\n    const body = {\n      name: this.state.inputNome,\n      email: this.state.inputEmail     \n    };\n\n    axios\n      .post(url, body, headers)\n      .then((res) => {\n        console.log(res)\n        alert(\"UsuÃ¡rio adicionado com sucesso\");\n        this.setState({ inputNome: \"\",inputEmail:\"\" });\n        this.pegarNome();\n        this.pegarEmail();\n      })\n      .catch((err) => {\n        alert(err.response.data.message);\n      });\n  };\n \n\n  render() {\n    const componentesNome = this.state.name.map((play) => {\n      return <li key={play.id}>{play.name}</li>;\n    });\n\n    return (\n      <div>\n        <h1>labenusers</h1>\n        <input\n          placeholder={\"insira seu nome\"}\n          value={this.state.inputNome}        \n          onChange={this.mudaInputNome}\n        />\n        <br></br>\n        <input\n          placeholder={\"insira seu e-mail\"}\n          value={this.state.inputEmail}        \n          onChange={this.mudaInputEmail}\n        />\n        <button onClick={this.criarUsuario}>Enviar</button>\n        {componentesNome}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}